import random
import os

class FileProvider:
    def get(self, path):
        file = open(path, 'r')
        data = file.read()
        file.close()
        return data

    def append(self, path, data):
        file = open(path, 'a')
        data = file.write(data)
        file.close

    def exists(self, path):
        return os.path.exists(path)

class Question:
    def __init__(self, text, answer):
        self.text = text
        self.answer = answer

class QuestionStorage:
    def get_all(self):
        questions = [Question('Сколько будет два плюс два умноженное на два?', 6),
            Question('Бревно нужно распилить на 10 частей, сколько нужно сделать распилов?', 9),
            Question('На двух руках 10 пальцев. Сколько пальцев на 5 руках?', 25),
            Question('Укол делают каждые полчаса, сколько нужно минут для трёх уколов?', 60),
            Question('Пять свечей горело, две потухли. Сколько свечей осталось?', 2)]
        return questions        

class User:
    def __init__(self, name, count_right_answer=0, result='Неизвестно'):
        self.name = name
        self.count_right_answer = count_right_answer
        self.result = result

    def accept_right_answer(self):
        self.count_right_answer += 1

    def set_result(self, result):
        self.result = result

class UsersResultStorage:
    def safe(self, user):
        file_name = 'save.txt'
        data = f'{user.name}/{user.count_right_answer}/{user.result}\n'

        file_provider = FileProvider()
        file_provider.append(file_name, data)

    def get_all(self):
        file_name = 'save.txt'

        file_provider = FileProvider()
        data = file_provider.get(file_name).strip('\n')
        data = data.split('\n')
        users = []

        for line in data:
            values = line.split('/')
            user = User(values[0], values[1], values[2])
            users.append(user)

        return users


questionStorage = QuestionStorage()
usersResultStorage = UsersResultStorage()

def more_game():
    while True:
        print('Желаете пройти тест ещё раз? Да или Нет')
        more_games_input = input()
        if more_games_input.upper() == 'ДА':
            my_tester_game()
            break
        elif more_games_input.upper() != 'НЕТ':
            continue
        else:
            print('Спасибо за игру!')
            break
        
def is_digit():
    while True:
        print('Введите число')
        answer = input()
        if answer.isdigit():
            answer = int(answer)
            break
        else:
            continue
    return answer

def result_game(count_right_answer):
    questions = questionStorage.get_all()
    number_of_questions = len(questions)
    count = (count_right_answer * 100 // number_of_questions) // 20
    
    if count == 0:
        return 'Идиот'
    elif count == 1:
        return 'Кретин'
    elif count == 2:
        return 'Дурак'
    elif count == 3:
        return 'Нормальный'
    elif count == 4:
        return 'Талант'
    elif count > 4:
        return 'Гений'

def show_records():
    user_name = 'Имя:'
    count_right_answer = 'Верных ответов:'
    user_result = 'Резултьтат:'
    print(f'{user_name:10}{count_right_answer:20}{user_result:10}')

    users = usersResultStorage.get_all()

    for user in users:
        print(f'{user.name:10}{user.count_right_answer:20}{user.result:10}')



def my_tester_game():
    
    print('Добрый день! Пожалуйста представьтесь.')
    user_name = input()
    user = User(user_name)    

    questions = questionStorage.get_all()

    
    print(f'Ну чтож {user_name}, начнём )')

    count_right_answer = 0

    for i in range(len(questions)):
        
        random_index = random.randint(0, len(questions) - 1)
        
        print(f'Билет номер {i + 1}')

        print(questions[random_index].text)

        user_answer = is_digit()

        right_answer = questions[random_index].answer

        if user_answer == right_answer:
            user.accept_right_answer()

        questions.pop(random_index)
        
    result = result_game(user.count_right_answer)
    user.set_result(result)
    print(f'{user_name}, количество Ваших правильных ответов = {user.count_right_answer} Позравляем! Вы - {result}.')

    usersResultStorage.safe(user)
        
    print('Желаете посмотреть результаты других игроков?')
    
    user_answer = input()
    if user_answer.upper() == 'ДА':
        show_records()
        
    more_game()       

my_tester_game()

import pygame
import random
import time

class Ball:
    def __init__(self, display):
        self.display = display
        self.color = pygame.Color('red')
        self.center_x = 100
        self.center_y = 100
        self.radius = 30

        self.vx = 2
        self.vy = 2

    def show(self):
        pygame.draw.circle(self.display, self.color, (self.center_x, self.center_y), self.radius)


    def go(self):
        self.center_x += self.vx
        self.center_y += self.vy


    def clear(self):
        pygame.draw.circle(self.display, pygame.Color('white'), (self.center_x, self.center_y), self.radius)

    def move(self):
        self.clear()
        self.go()
        self.show()


    def stop(self):
        self.vx = 0
        self.vy = 0

    
class RandomPointBall(Ball):
    def __init__(self, display):
        super().__init__(display)

        self.color = pygame.Color('blue')

        width, height = display.get_size()
        self.center_x = random.randint(self.radius, width - self.radius)
        self.center_y = random.randint(self.radius, height - self.radius)

        
class PointBall(Ball):
    def __init__(self, display, x, y):
        super().__init__(display)

        self.color = pygame.Color('yellow')

        self.center_x = x
        self.center_y = y

        
class RandomPointMovableBall(RandomPointBall):
    def __init__(self, display):
        super().__init__(display)

        while True:
            self.vx = random.randint(-3, 3)
            self.vy = random.randint(-3, 3)
            if self.vx != 0 and self.vy != 0:
                break
            else:
                continue

        
def is_in_form(x, y):
    if x < heigth and x > 1 and y < width and y > 1:
        return True
    else:
        return False


pygame.init()

width = 700
heigth = 400
display = pygame.display.set_mode((width, heigth))
display.fill(pygame.Color('white'))

balls = []
for i in range(10):
    ball = RandomPointMovableBall(display)
    ball.show()
    balls.append(ball)

pygame.display.flip()

time.sleep(2)

clocl = pygame.time.Clock()
while True:

    event_list = pygame.event.get()
    for event in event_list:
        if event.type == pygame.QUIT:
            pygame.quit()

        if event.type == pygame.MOUSEBUTTONDOWN:
            count = 0
            for ball in balls:
                ball.stop()

                center_x = ball.center_x
                center_y = ball.center_y
             
                if is_in_form(center_x, center_y):

                    count += 1

               
            print(count)

                    
                
    for ball in balls:
        ball.move()

    pygame.display.flip()
    clocl.tick(60)
